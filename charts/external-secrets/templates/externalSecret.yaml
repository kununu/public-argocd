{{- if .Values.externalSecret.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-deploy-ssh-key
  labels:
    "app.kubernetes.io/managed-by": Helm
    "argocd.argoproj.io/secret-type": repository
  namespace: argocd
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      type: Opaque
      metadata:
        labels:
          "argocd.argoproj.io/secret-type": repository
      data:
        type: git
        url: git@github.com:kununu/public-argocd.git
        # The curly braces have to be de-referenced since Helm is looking for a .sshPrivateKey locally and, since this is a remote value (being fetched from 1Password API), it won't exist and will return nil.
        # We want to bypass that check.
        sshPrivateKey:  "{{`{{.sshPrivateKey}}`}}"

  data:
    - secretKey: sshPrivateKey
      remoteRef:
        key: argocd-deploy-ssh-key

{{- end }}
